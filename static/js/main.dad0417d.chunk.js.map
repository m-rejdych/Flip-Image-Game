{"version":3,"sources":["components/GameBoard/Fields/Field/Field.module.css","components/Buttons/LevelButtons/LevelButtons.module.css","containers/Container/Container.module.css","components/GameBoard/GameBoard.module.css","components/EndGameHeadline/EndGameHeadline.module.css","components/Buttons/RestartButton/RestartButton.module.css","components/GameBoard/Fields/Field/Field.js","hoc/Aux.js","components/GameBoard/Fields/Fields.js","components/GameBoard/GameBoard.js","components/Buttons/LevelButtons/LevelButtons.js","components/EndGameHeadline/EndGameHeadline.js","components/Buttons/RestartButton/RestartButton.js","containers/Container/Container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Field","state","refference","React","createRef","activateFieldHandler","props","fieldsActivated","some","item","identificator","length","color","activateField","setTimeout","desactivateFields","colors","isEndGame","container","classesFront","styles","FieldFront","classesBack","FieldBack","this","Container","Activated","level","push","Easy","Medium","Hard","ref","onClick","className","join","style","backgroundColor","Component","aux","children","fields","fieldsArr","fieldColors","i","num","key","Aux","gameBoard","GameBoard","Fields","numOfFields","levelButtons","click","LevelButton","endGameHeadline","EndGameHeadline","restartButton","RestartButton","restart","levelButtonsShown","endGame","setLevelHandler","setState","setNumOfFieldsHandler","addColorsHandler","count","Math","floor","random","finalColors","splice","addFieldActivatedHandler","id","desactivateFieldsHandler","endGameChecker","restartGame","console","log","LevelButtons","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dad0417d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Field_Container__3bBZJ\",\"Activated\":\"Field_Activated__1UoiX\",\"FieldFront\":\"Field_FieldFront__200Zm\",\"FieldBack\":\"Field_FieldBack__2x4LV\",\"Easy\":\"Field_Easy__2_lyn\",\"Medium\":\"Field_Medium__3DNwe\",\"Hard\":\"Field_Hard__ukSoQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LevelButtons_Container__mpZZe\",\"LevelButton\":\"LevelButtons_LevelButton__jviWr\",\"Easy\":\"LevelButtons_Easy__1l9Ar\",\"Medium\":\"LevelButtons_Medium__B2Jgv\",\"Hard\":\"LevelButtons_Hard__1XT9j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__23ogP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameBoard\":\"GameBoard_GameBoard__2sC3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EndGameHeadline\":\"EndGameHeadline_EndGameHeadline__23D3I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RestartButton\":\"RestartButton_RestartButton__2fTlE\"};","import React, { Component } from 'react';\n\nimport styles from './Field.module.css';\n\nclass Field extends Component {\n  state = {};\n\n  refference = React.createRef();\n\n  activateFieldHandler = () => {\n    if (\n      this.props.fieldsActivated.some(\n        (item) => item[1] === this.props.identificator\n      )\n    )\n      return;\n\n    if (\n      this.props.fieldsActivated.length >= 2 &&\n      this.props.fieldsActivated.length % 2 === 0 &&\n      this.props.fieldsActivated[this.props.fieldsActivated.length - 1][0] !==\n        this.props.fieldsActivated[this.props.fieldsActivated.length - 2][0]\n    )\n      return;\n\n    if (this.props.fieldsActivated.length % 2 === 0) {\n      this.props.activateField(this.props.color, this.props.identificator);\n    } else {\n      if (\n        this.props.fieldsActivated[this.props.fieldsActivated.length - 1][0] ===\n        this.props.color\n      ) {\n        this.props.activateField(this.props.color, this.props.identificator);\n      } else {\n        this.props.activateField(this.props.color, this.props.identificator);\n        setTimeout(() => this.props.desactivateFields(), 1000);\n      }\n    }\n\n    if (this.props.fieldsActivated.length === this.props.colors.length)\n      this.props.isEndGame();\n  };\n\n  // changeClassHandler = () =>\n  //   this.props.fieldsActivated.indexOf(this.props.color) === -1\n  //     ? styles.Container\n  //     : [styles.Container].join(' ');\n\n  render() {\n    const classesFront = [styles.FieldFront];\n    const classesBack = [styles.FieldBack];\n    let container;\n\n    this.props.fieldsActivated.some(\n      (item) =>\n        item[0] === this.props.color && item[1] === this.props.identificator\n    )\n      ? (container = [styles.Container, styles.Activated])\n      : (container = [styles.Container]);\n\n    this.props.level === 'easy'\n      ? container.push(styles.Easy)\n      : this.props.level === 'medium'\n      ? container.push(styles.Medium)\n      : container.push(styles.Hard);\n\n    return (\n      <div\n        ref={this.refference}\n        onClick={this.activateFieldHandler}\n        className={container.join(' ')}\n      >\n        <div className={classesFront.join(' ')}></div>\n        <div\n          className={classesBack.join(' ')}\n          style={{ backgroundColor: this.props.color }}\n        >\n          {' '}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Field;\n","const aux = (props) => props.children;\n\nexport default aux;\n","import React from 'react';\n\nimport Field from './Field/Field';\nimport Aux from '../../../hoc/Aux';\n\nconst fields = (props) => {\n  const fieldsArr = [];\n  const fieldColors = [...props.colors];\n\n  for (let i = 0; i < props.num; i++) {\n    fieldsArr.push(\n      <Field\n        activateField={props.activateField}\n        key={i + 'field'}\n        level={props.level}\n        color={fieldColors[i]}\n        colors={props.colors}\n        fieldsActivated={props.fieldsActivated}\n        desactivateFields={props.desactivateFields}\n        identificator={i}\n        isEndGame={props.isEndGame}\n      />\n    );\n  }\n\n  return <Aux>{fieldsArr}</Aux>;\n};\n\nexport default fields;\n","import React from 'react';\n\nimport styles from './GameBoard.module.css';\nimport Fields from './Fields/Fields';\n\nconst gameBoard = (props) => (\n  <div className={styles.GameBoard}>\n    <Fields\n      activateField={props.activateField}\n      colors={props.colors}\n      level={props.level}\n      num={props.numOfFields}\n      fieldsActivated={props.fieldsActivated}\n      desactivateFields={props.desactivateFields}\n      isEndGame={props.isEndGame}\n    />\n  </div>\n);\n\nexport default gameBoard;\n","import React from 'react';\n\nimport styles from './LevelButtons.module.css';\n\nconst levelButtons = (props) => (\n  <div className={styles.Container}>\n    <button\n      onClick={() => props.click('easy')}\n      className={[styles.LevelButton, styles.Easy].join(' ')}\n    >\n      Easy\n    </button>\n    <button\n      onClick={() => props.click('medium')}\n      className={[styles.LevelButton, styles.Medium].join(' ')}\n    >\n      Medium\n    </button>\n    <button\n      onClick={() => props.click('hard')}\n      className={[styles.LevelButton, styles.Hard].join(' ')}\n    >\n      Hard\n    </button>\n  </div>\n);\n\nexport default levelButtons;\n","import React from 'react';\n\nimport styles from './EndGameHeadline.module.css';\n\nconst endGameHeadline = () => (\n  <h1 className={styles.EndGameHeadline}>Congratulations, you won!</h1>\n);\n\nexport default endGameHeadline;\n","import React from 'react';\n\nimport styles from './RestartButton.module.css';\n\nconst restartButton = (props) => (\n  <button className={styles.RestartButton} onClick={props.restart}>\n    Restart\n  </button>\n);\n\nexport default restartButton;\n","import React, { Component } from 'react';\n\nimport styles from './Container.module.css';\nimport GameBoard from '../../components/GameBoard/GameBoard';\nimport LevelButtons from '../../components/Buttons/LevelButtons/LevelButtons';\nimport EndGameHeadline from '../../components/EndGameHeadline/EndGameHeadline';\nimport RestartButton from '../../components/Buttons/RestartButton/RestartButton';\n\nclass Container extends Component {\n  state = {\n    level: null,\n    levelButtonsShown: true,\n    numOfFields: 0,\n    colors: [],\n    fieldsActivated: [],\n    endGame: false,\n  };\n\n  setLevelHandler = (level) => {\n    this.setState({ level, levelButtonsShown: !this.state.levelButtonsShown });\n    this.setNumOfFieldsHandler(level);\n    this.addColorsHandler(level);\n  };\n\n  setNumOfFieldsHandler = (level) => {\n    level === 'easy'\n      ? this.setState({ numOfFields: 16 })\n      : level === 'medium'\n      ? this.setState({ numOfFields: 64 })\n      : this.setState({ numOfFields: 100 });\n  };\n\n  componentDidUpdate() {\n    console.log(this.state);\n  }\n\n  addColorsHandler = (level) => {\n    const newState = { ...this.state };\n    const { colors } = newState;\n    let count;\n    level === 'easy'\n      ? (count = 8)\n      : level === 'medium'\n      ? (count = 32)\n      : (count = 50);\n\n    for (let i = 0; i < count; i++) {\n      const color = `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(\n        Math.random() * 255\n      )}, ${Math.floor(Math.random() * 255)})`;\n\n      colors.push(color);\n      colors.push(color);\n    }\n\n    const finalColors = [];\n\n    for (let i = 0; i < count * 2; i++) {\n      const random = Math.floor(Math.random() * (colors.length - 1));\n      finalColors.push(colors[random]);\n      colors.splice(random, 1);\n    }\n\n    this.setState({ colors: finalColors });\n  };\n\n  addFieldActivatedHandler = (color, id) => {\n    const newState = { ...this.state };\n    const { fieldsActivated } = newState;\n    fieldsActivated.push([color, id]);\n    this.setState({ fieldsActivated });\n  };\n\n  desactivateFieldsHandler = () => {\n    const newState = { ...this.state };\n    const { fieldsActivated } = newState;\n    fieldsActivated.splice(-2);\n\n    this.setState({ fieldsActivated });\n  };\n\n  endGameChecker = () => {\n    if (\n      this.state.fieldsActivated[this.state.fieldsActivated.length - 1][0] ===\n      this.state.fieldsActivated[this.state.fieldsActivated.length - 2][0]\n    )\n      this.setState({ endGame: true });\n  };\n\n  restartGame = () => {\n    this.setState({\n      level: null,\n      levelButtonsShown: true,\n      numOfFields: 0,\n      colors: [],\n      fieldsActivated: [],\n      endGame: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className={styles.Container}>\n        {this.state.endGame ? <EndGameHeadline /> : null}\n        <GameBoard\n          level={this.state.level}\n          numOfFields={this.state.numOfFields}\n          colors={this.state.colors}\n          activateField={this.addFieldActivatedHandler}\n          fieldsActivated={this.state.fieldsActivated}\n          desactivateFields={this.desactivateFieldsHandler}\n          isEndGame={this.endGameChecker}\n        />\n        {this.state.levelButtonsShown ? (\n          <LevelButtons click={this.setLevelHandler} />\n        ) : null}\n        {this.state.endGame ? (\n          <RestartButton restart={this.restartGame} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import React, { Component } from 'react';\n\nimport Container from './containers/Container/Container';\n\nclass App extends Component {\n  render() {\n    return <Container />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}